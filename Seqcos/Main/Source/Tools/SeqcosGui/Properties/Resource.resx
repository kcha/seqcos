<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationUri" xml:space="preserve">
    <value>http://seqcos.codeplex.com</value>
  </data>
  <data name="AUTOPARSE_FAIL" xml:space="preserve">
    <value>Unable to auto-detect the parser type of this file. Please manually set the parser type before continuing.</value>
  </data>
  <data name="BlastDbEnvironmentVariable" xml:space="preserve">
    <value>blastdb</value>
  </data>
  <data name="BlastDbFilters" xml:space="preserve">
    <value>BLAST DNA Database index file (*.nin)|*.nin</value>
    <comment>BLAST DNA Database files (*.nin; *.nsq; *.nhr)|*.nin;*.nsq;*.nhr|BLAST Protein Database files (*.pin;*.psq;*.phr)|*.pin;*.psq;*.phr</comment>
  </data>
  <data name="DB_SELECT_FAIL" xml:space="preserve">
    <value />
  </data>
  <data name="MANUAL_CHOICE" xml:space="preserve">
    <value>Choose one...</value>
  </data>
  <data name="BlastDbDnaHeaderExt" xml:space="preserve">
    <value>nhr</value>
  </data>
  <data name="BlastDbDnaIndexExt" xml:space="preserve">
    <value>nin</value>
  </data>
  <data name="BlastDbDnaSequenceExt" xml:space="preserve">
    <value>nsq</value>
  </data>
  <data name="BlastDbNotFound" xml:space="preserve">
    <value>Missing the database file {0}. Please make sure your BLAST database is properly formatted using formatdb.exe.</value>
  </data>
  <data name="BlastDbProteinHeaderExt" xml:space="preserve">
    <value>phr</value>
  </data>
  <data name="BlastDbProteinIndexExt" xml:space="preserve">
    <value>pin</value>
  </data>
  <data name="BlastDbProteinSequenceExt" xml:space="preserve">
    <value>psq</value>
  </data>
  <data name="ChartFormat" xml:space="preserve">
    <value>jpg</value>
  </data>
  <data name="Explorer" xml:space="preserve">
    <value>explorer.exe</value>
  </data>
  <data name="LoadRunFail" xml:space="preserve">
    <value>No appropriate image files were found in this directory.</value>
  </data>
  <data name="LoadRunFailCaption" xml:space="preserve">
    <value>No Results Found</value>
  </data>
  <data name="NoInputFile" xml:space="preserve">
    <value>Please select an input filename.</value>
  </data>
  <data name="NoInputParserType" xml:space="preserve">
    <value>Please select an input parser type.</value>
  </data>
  <data name="NoOutputFile" xml:space="preserve">
    <value>Please select an output filename.</value>
  </data>
  <data name="NoOutputParserType" xml:space="preserve">
    <value>Please select an output parser type.</value>
  </data>
  <data name="NotNumeric" xml:space="preserve">
    <value>You have entered a non-numeric value in a numeric field. Please correct this.</value>
  </data>
  <data name="NoValue" xml:space="preserve">
    <value>Please enter a value in all required fields.</value>
  </data>
  <data name="CancelConfirm" xml:space="preserve">
    <value>Are you sure you want to cancel this process? </value>
  </data>
  <data name="InvalidOutputParserType" xml:space="preserve">
    <value>Error: Invalid output parser type. Unable to continue.</value>
  </data>
  <data name="ReadLengthTooLarge" xml:space="preserve">
    <value>We believe the selected read length is greater than the current maximum read length ({0} bp) for the input file {1}. Do you wish to continue with the filtering? Click Cancel to go back and make changes.</value>
  </data>
  <data name="NonsenseError" xml:space="preserve">
    <value>Oops...something wrong happened. The program shouldn't have reached here.</value>
  </data>
  <data name="NotPositiveInteger" xml:space="preserve">
    <value>You have entered a non-positive integer value. Please correct this.</value>
  </data>
  <data name="ReadLengthTooLargeCaption" xml:space="preserve">
    <value>Is the read length too large?</value>
  </data>
  <data name="SameFilename" xml:space="preserve">
    <value>You have selected the same filename in more than one field. Please choose a different filename.</value>
  </data>
  <data name="DiscardReport" xml:space="preserve">
    <value>Discarded {0}/{1} sequences.</value>
  </data>
  <data name="TrimReport" xml:space="preserve">
    <value>Trimmed {0}/{1} sequences.</value>
  </data>
  <data name="CloseConfirm" xml:space="preserve">
    <value>Are you sure you want to exit the program?</value>
  </data>
  <data name="NotValidRegex" xml:space="preserve">
    <value>Unable to process the regular expression pattern {0}. Please try again.</value>
  </data>
</root>